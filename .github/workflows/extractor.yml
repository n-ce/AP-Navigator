name: Daily Book Data Update

on:
  schedule:
    # Runs every day at midnight UTC.
    # You can adjust this cron schedule as needed.
    # Example: '0 0 * * *' (Midnight UTC daily)
    # Example: '30 6 * * *' (6:30 AM UTC daily)
    - cron: '0 0 * * *' 
  
  # Allows you to run this workflow manually from the Actions tab in GitHub
  workflow_dispatch: 

jobs:
  update-books:
    runs-on: ubuntu-latest # Specifies the operating system for the runner

    steps:
      - name: Checkout repository
        # This action checks out your repository code so the workflow can access it.
        uses: actions/checkout@v4

      - name: Set up Go
        # This action sets up the Go programming language environment.
        uses: actions/setup-go@v5
        with:
          go-version: '1.24' # Use a recent stable Go version

      - name: Build Go updater
        # This step compiles your main.go file into an executable named 'book-updater'.
        run: go build -o book-updater main.go 

      - name: Run Go updater script
        # This step executes the compiled Go program.
        # It will perform all the API calls, process the data, and generate 'book.json'.
        run: ./book-updater 

      - name: Commit and Push changes
        # This step commits the updated 'book.json' file back to your repository.
        run: |
          # Configure Git user for the commit
          git config user.name 'GitHub Actions'
          git config user.email 'github-actions@github.com'
          
          # Add the generated JSON file to the staging area
          git add books.json 
          
          # Commit the changes. '|| echo "No changes to commit"' prevents the workflow from failing
          # if the file content hasn't changed since the last run.
          git commit -m 'Automated: Update book data JSON' || echo "No changes to commit"
          
          # Push the changes to the remote repository.
          # GITHUB_TOKEN is a built-in token with sufficient permissions for this.
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
